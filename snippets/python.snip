snippet     lfecho
abbr        lfCmd("echomsg ...")
	lfCmd("echomsg '{}'".format(${1}))

snippet     writefile
abbr        filewrite,file
	from pathlib import Path
	p = Path(r'~/tmp/leaderf.log')
	with p.open('w', encoding='utf-8') as f:
		f.writelines('hello')

snippet     echo
abbr        print()
	print(${0})

snippet     try
abbr        try-except
	try:
		${0}
	except Exception as e:
		raise e

snippet     log
abbr        f.writelines()
	from pathlib import Path
	p = Path(r'C:\tmp\lf_log')
	with p.open('a', encoding="utf-8") as f:
		f.writelines(${0})

snippet     im
abbr        import {module}
options     head
	import ${0}


snippet     dataclass
options     head
	@dataclass
	class ${1:Class}:
		${2:field}: ${3:type}
		${0}

snippet     raise
abbr        raise Exception(...)
	raise Exception(${1:#:'message'})

snippet     init
abbr        def __init__(self, ...)
	def __init__(self, ${1:#:args}) -> None:
		${2:pass}

snippet     def
abbr        def method(self, ...) -> type: ...
options     head
	def ${1:#:name}(${2}) -> ${3:None}:
		${0:pass}

snippet     defm
abbr        def method(self, ...) -> type: ...
options     head
	def ${1:#:name}(self${2}) -> ${3:None}:
		${0:pass}

snippet     defstr
abbr        def __str__(self) -> str: return ...
options     head
	def __str__(self) -> str:
		return "${0}"
