snippet     for
abbr        for ... in ... { ... }
options     head
    for ${1:i} in ${2:#:list} {
    	${0}
    }

snippet     vec
abbr        vec![...]
alias		vec!
    vec![${1}]

snippet     print
abbr        print!(...);
alias		print!
    print!("{${1}}", ${2});


snippet     println
abbr        println!(...);
alias		println!
    println!("{${1}}", ${2});

snippet     fn
abbr        fn fn_name(args) { ... }
options     head
alias		fun func
    fn ${1:#:func_name}(${2:#:args}) {
        ${0:TARGET}
    }

snippet     match
    match ${1:TARGET} {
    	${2:Some(expr)} => ${3:expr},
    	${4:None} => ${5:expr},
    }

snippet     iflet
abbr        if let pattern = expr { ... }
    if let ${1:#:pattern} = ${2:#:value} {
    	${0}
    }

snippet     loop
abbr        loop { ... }
    loop {
    	${0}
    }

snippet     while
abbr        while condition { ... }
    while ${1:#:condition} {
        ${0}
    }

snippet     whilelet
abbr        while let pattern = expr { ... }
    while let ${1:#:pattern} = ${2:#:value} {
    	${0}
    }

